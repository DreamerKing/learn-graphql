    enum PhotoCategory {
      SELFIE
      PORTRAIT
      ACTION
      LANDSPACE
      GRAPHIC
    }

    scalar DateTime

    type Photo {
        id: ID!
        url: String!
        name: String!
        description: String,
        category: PhotoCategory!
        created: DateTime!
        postedBy: User!
        taggedUsers: [User!]!
    }

    type User {
        id: ID!
        url: String!
        githubLogin: String!
        name: String!
        avatar: String!
        postedPhotos: [Photo!]!
        inPhotos: [Photo!]!
    }

    type AuthPayload {
        token: String!
        user: User!
    }

    input PostPhotoInput {
        name: String!
        category: PhotoCategory=PORTRAIT
        description: String
        # postedBy: User!
    }


    type Query {
        totalPhotos: Int!
        allPhotos(after: DateTime): [Photo!]!
        totalUsers: Int!
        allUsers: [User!]!
        me: User
    }
    
    type Mutation {
        addFakeUsers(count: Int = 1): [User!]!
        fakeUserAuth(githubLogin: ID!): AuthPayload!
        postPhoto(input: PostPhotoInput! ) : Photo!
        githubAuth(code: String!): AuthPayload!
    }  